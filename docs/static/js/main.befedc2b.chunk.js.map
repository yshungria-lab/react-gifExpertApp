{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SAEI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SArBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAETC,EAFS,iDAEwCC,UAAWH,GAFnD,+DAIII,MAAOF,GAJX,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX3B,kBAiBRM,GAjBQ,4CAAH,sDCCPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KA+BxC,OAxBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GAIHH,EAAU,CACNf,KAAMkB,EACNL,SAAQ,SAarB,CAACpB,IAEGqB,EDrB2BK,CAAc1B,GAAlCa,EAPuB,EAO7BN,KAAca,EAPe,EAOfA,QAetB,OAEI,cADA,CACA,sBACI,qBAAIJ,UAAW,oCAAf,cAAsDhB,EAAtD,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,uBAEb,qBAAKA,UAAU,YAAf,SAGSH,EAAOJ,KAAK,SAAAC,GAAG,OAEZ,cAAC,EAAD,eAESA,GADCA,EAAIC,aErCzBgB,EAAe,WAAM,MAGMzC,mBAAS,CAAE,gBAHjB,mBAGvB0C,EAHuB,KAGXC,EAHW,KAY9B,OACI,qCAEA,8CACA,cAAC,EAAD,CAAa5C,cAAkB4C,IAC/B,uBAOA,6BAIQD,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAaA,GADNA,Y,MC3B/B8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.befedc2b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( {setCategories} ) => {\n        \n    const [inputValue, setInputValue] = useState(''); //  useState sin valor es undefined entonces se recomienda // '' string vacío.\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log('Submit hecho');\n\n        if ( inputValue.trim().length > 2){\n            setCategories( cats => [ inputValue, ...cats] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        <form onSubmit = { handleSubmit }>\n            {/* <h2>Add Category</h2>  */}\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange = { handleInputChange }\n           />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","    \nexport const getGifs = async ( category ) => {\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=ibdsgEYN37NXdPwU92vxb73QTAlyj7fY`\n\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })\n\n        // console.log(gifs);\n        // setImages( gifs );\n        return gifs;      \n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    // console.log( title, url );\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            {/* { img.title } */}\n            <img src={ url } alt={title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n\n    // const [Count, setCount] = useState(0);\n\n\n    // Aplicación del custom Hook...\n    const { data: images, loading } = useFetchGifs( category );\n\n\n\n    // console.log(loading);\n\n    // const [images, setImages] = useState([]);\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( gifs => setImages( gifs ))\n    // }, [ category ])\n\n    // getGifs();\n\n    return (\n        //Fragment corto <> </>\n        <>\n            <h3 className= 'animate__animated animate__fadeIn'> { category } </h3>\n\n            { loading && <p className='animate__animated animate__flash' > Loading </p> }\n\n            <div className=\"card-grid\">\n\n                {\n                     images.map( img => (\n\n                        <GifGridItem \n                            key={ img.id }\n                            { ...img }\n                        />\n                        \n                    ))\n                }\n               \n            </div>\n\n        </>\n            \n            // {/* <h3> { Count } </h3>\n            // <button onClick = { ()=> setCount (Count + 1)}> Incrementa el Count en 1 </button> */} \n\n            // {/* <li> Item </li> */}\n            // {\n            //     // images.map( img => (\n            //         //     <li key={ img.id }> { img.title } </li>\n            //         // ))\n            //         // images.map( ({ id , title }) => (\n            //         //     // <li key={ id }> { title } </li>\n            //         // ))\n                    \n            // }\n                     \n    )\n}\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        \n        getGifs(category)\n            .then( imgs => {\n\n            // console.log(imgs);\n\n                setstate ({\n                    data: imgs,\n                    loading:false\n                })\n            \n            })\n\n\n    // setTimeout( () => {\n    //     setstate({\n    //         data: [1,2,3,4,5,6,7],\n    //         loading: true\n    //     })\n    // }, 3000);\n\n    }, [category])\n    \n    return state; // { data: [], loading: true };\n\n}   ","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    // const categories = ['One Punch', 'Samurai X', 'Drago Ball' ];\n    const [categories, setcategories] = useState([ 'Dragon Ball' ]);  \n\n    // const handleAdd = () => {\n    //     // categories.push('HunterXHunter');\n    //     // console.log(categories);\n    //     // setcategories( ['HunterXHunter', ...categories ] );\n    //     setcategories( cats => [...cats, 'HunterXHunter'] );\n    // }\n    \n    return (\n        <>\n\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories = { setcategories }/>\n        <hr />\n\n        {/* <button onClick = { handleAdd } >Agregar</button> */}\n\n        {/* {\n            categories\n        } */}\n        <ol>\n            {   /* <li> One </li>\n                <li> Samurai</li>\n                <li>Dragon</li> */\n                categories.map( category =>(\n                    <GifGrid \n                        key = {category}\n                        category = { category } \n                    />\n                ))  \n                //    <li key={ category }> {category } </li>\n                // return <li> { idx + 1 } Hola Yojan </li>  \n            }\n        </ol>\n\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}